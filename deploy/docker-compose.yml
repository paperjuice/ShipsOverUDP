---
version: '3.9'

services:
  # --------------------- #
  # ---- Cassandra DB ----#
  # --------------------- #
  cas_dev:
    image: cassandra:4.0
      #    volumes:
      #      - ~/apps/cassandra:/var/lib/cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=ships_over_dns
    ports:
      - "9042-9043:9042"
    networks:
      - ships_over_dns_network
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: dnsrr

  # --------------------- #
  # --- Load Balancer --- #
  # --------------------- #
  lb:
    image: nginx
    volumes:
      - type: bind
        source: ./nginx.conf
        target: /etc/nginx/nginx.conf
        read_only: false
    ports:
      - "2053:2053/udp"
    networks:
      - ships_over_dns_network

  # --------------------- #
  # ------- Kafka ------- #
  # --------------------- #
  zookeeper:
    platform: linux/amd64
    image: confluentinc/cp-zookeeper:${CONFLUENT_PLATFORM_VERSION:-7.4.0}
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - '32181:32181'
      - '2888:2888'
      - '3888:3888'
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    healthcheck:
      test: echo stat | nc localhost 32181
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - ships_over_dns_network

        #  kafka-ui:
        #    container_name: kafka-ui
        #    image: provectuslabs/kafka-ui:latest
        #    ports:
        #      - 8080:8080
        #    depends_on:
        #      - broker-1
        #      - broker-2
        #    environment:
        #      KAFKA_CLUSTERS_0_NAME: broker-1
        #      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker-1:29091
        #      KAFKA_CLUSTERS_0_METRICS_PORT: 19101
        #      KAFKA_CLUSTERS_1_NAME: broker-2
        #      KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: broker-2:29092
        #      KAFKA_CLUSTERS_1_METRICS_PORT: 19102
        #    networks:
        #      - ships_over_dns_network

  broker-1:
    platform: linux/amd64
    image: confluentinc/cp-kafka:${CONFLUENT_PLATFORM_VERSION:-7.4.0}
    container_name: broker-1
    restart: unless-stopped
    ports:
      - '9091:9091'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-1:29091,EXTERNAL://localhost:9091
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_JMX_PORT: 19101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
        #      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "2"
        #      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "2"
        #      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "2"
        #      CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 2
    healthcheck:
      test: nc -vz localhost 9091
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - ships_over_dns_network

  broker-2:
    platform: linux/amd64
    image: confluentinc/cp-kafka:${CONFLUENT_PLATFORM_VERSION:-7.4.0}
    container_name: broker-2
    restart: unless-stopped
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-2:29092,EXTERNAL://localhost:9092
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_JMX_PORT: 19102
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
        #      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "2"
        #      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "2"
        #      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "2"
        #      CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 2
    healthcheck:
      test: nc -vz localhost 9092
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - ships_over_dns_network

        #  kafka-init-bu:
        #    image: confluentinc/cp-kafka:7.4.4
        #    networks:
        #      - ships_over_dns_network
        #    command: [ "/bin/bash", "-c", "/create_kafka_topic.sh"]
        #    environment:
        #      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2888:3888
        #      - TEST_TOPIC_NAME=vessels
        #    depends_on:
        #      broker-1:
        #        condition: service_started
        #      broker-2:
        #        condition: service_started
        #    volumes:
        #      - type: bind
        #        source: ./create_kafka_topic.sh
        #        target: /create_kafka_topic.sh
        #    init: true


  kafka-init:
    image: docker.io/bitnami/kafka:3
    networks:
      - ships_over_dns_network
    command: [ "/bin/bash", "-c", "/create_kafka_topic.sh"]
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2888:3888
      - TEST_TOPIC_NAME=vessels
    depends_on:
      broker-1:
        condition: service_started
      broker-2:
        condition: service_started
    volumes:
      - type: bind
        source: ./create_kafka_topic.sh
        target: /create_kafka_topic.sh
    init: true


  # --------------------- #
  # ------ Network ------ #
  # --------------------- #
networks:
  ships_over_dns_network:
    name: ships_over_dns_network
